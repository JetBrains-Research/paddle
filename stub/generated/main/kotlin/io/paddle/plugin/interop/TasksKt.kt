//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: project.proto

package io.paddle.plugin.interop;

@kotlin.jvm.JvmSynthetic
public inline fun tasks(block: io.paddle.plugin.interop.TasksKt.Dsl.() -> kotlin.Unit): io.paddle.plugin.interop.Tasks =
  io.paddle.plugin.interop.TasksKt.Dsl._create(io.paddle.plugin.interop.Tasks.newBuilder()).apply { block() }._build()
public object TasksKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.paddle.plugin.interop.Tasks.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.paddle.plugin.interop.Tasks.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.paddle.plugin.interop.Tasks = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class NamesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated string names = 1;</code>
     * @return A list containing the names.
     */
    public val names: com.google.protobuf.kotlin.DslList<kotlin.String, NamesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getNamesList()
      )
    /**
     * <code>repeated string names = 1;</code>
     * @param value The names to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addNames")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, NamesProxy>.add(value: kotlin.String) {
      _builder.addNames(value)
    }
    /**
     * <code>repeated string names = 1;</code>
     * @param value The names to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignNames")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, NamesProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * <code>repeated string names = 1;</code>
     * @param values The names to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllNames")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, NamesProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllNames(values)
    }
    /**
     * <code>repeated string names = 1;</code>
     * @param values The names to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllNames")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, NamesProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * <code>repeated string names = 1;</code>
     * @param index The index to set the value at.
     * @param value The names to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setNames")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, NamesProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setNames(index, value)
    }/**
     * <code>repeated string names = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearNames")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, NamesProxy>.clear() {
      _builder.clearNames()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun io.paddle.plugin.interop.Tasks.copy(block: io.paddle.plugin.interop.TasksKt.Dsl.() -> kotlin.Unit): io.paddle.plugin.interop.Tasks =
  io.paddle.plugin.interop.TasksKt.Dsl._create(this.toBuilder()).apply { block() }._build()
