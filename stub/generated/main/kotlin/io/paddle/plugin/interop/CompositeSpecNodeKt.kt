//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: project.proto

package io.paddle.plugin.interop;

@kotlin.jvm.JvmSynthetic
public inline fun compositeSpecNode(block: io.paddle.plugin.interop.CompositeSpecNodeKt.Dsl.() -> kotlin.Unit): io.paddle.plugin.interop.CompositeSpecNode =
  io.paddle.plugin.interop.CompositeSpecNodeKt.Dsl._create(io.paddle.plugin.interop.CompositeSpecNode.newBuilder()).apply { block() }._build()
public object CompositeSpecNodeKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.paddle.plugin.interop.CompositeSpecNode.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.paddle.plugin.interop.CompositeSpecNode.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.paddle.plugin.interop.CompositeSpecNode = _builder.build()

    /**
     * <code>string title = 1;</code>
     */
    public var title: kotlin.String
      @JvmName("getTitle")
      get() = _builder.getTitle()
      @JvmName("setTitle")
      set(value) {
        _builder.setTitle(value)
      }
    /**
     * <code>string title = 1;</code>
     */
    public fun clearTitle() {
      _builder.clearTitle()
    }

    /**
     * <code>string description = 2;</code>
     */
    public var description: kotlin.String
      @JvmName("getDescription")
      get() = _builder.getDescription()
      @JvmName("setDescription")
      set(value) {
        _builder.setDescription(value)
      }
    /**
     * <code>string description = 2;</code>
     */
    public fun clearDescription() {
      _builder.clearDescription()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class RequiredProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated string required = 3;</code>
     * @return A list containing the required.
     */
    public val required: com.google.protobuf.kotlin.DslList<kotlin.String, RequiredProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getRequiredList()
      )
    /**
     * <code>repeated string required = 3;</code>
     * @param value The required to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addRequired")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, RequiredProxy>.add(value: kotlin.String) {
      _builder.addRequired(value)
    }
    /**
     * <code>repeated string required = 3;</code>
     * @param value The required to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignRequired")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, RequiredProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * <code>repeated string required = 3;</code>
     * @param values The required to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllRequired")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, RequiredProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllRequired(values)
    }
    /**
     * <code>repeated string required = 3;</code>
     * @param values The required to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllRequired")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, RequiredProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * <code>repeated string required = 3;</code>
     * @param index The index to set the value at.
     * @param value The required to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setRequired")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, RequiredProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setRequired(index, value)
    }/**
     * <code>repeated string required = 3;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearRequired")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, RequiredProxy>.clear() {
      _builder.clearRequired()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class PropertiesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>map&lt;string, .io.paddle.plugin.interop.SpecNode&gt; properties = 4;</code>
     */
     public val properties: com.google.protobuf.kotlin.DslMap<kotlin.String, io.paddle.plugin.interop.SpecNode, PropertiesProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getPropertiesMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getPropertiesMap()
      )
    /**
     * <code>map&lt;string, .io.paddle.plugin.interop.SpecNode&gt; properties = 4;</code>
     */
    @JvmName("putProperties")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, io.paddle.plugin.interop.SpecNode, PropertiesProxy>
      .put(key: kotlin.String, value: io.paddle.plugin.interop.SpecNode) {
         _builder.putProperties(key, value)
       }
    /**
     * <code>map&lt;string, .io.paddle.plugin.interop.SpecNode&gt; properties = 4;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setProperties")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, io.paddle.plugin.interop.SpecNode, PropertiesProxy>
      .set(key: kotlin.String, value: io.paddle.plugin.interop.SpecNode) {
         put(key, value)
       }
    /**
     * <code>map&lt;string, .io.paddle.plugin.interop.SpecNode&gt; properties = 4;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeProperties")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, io.paddle.plugin.interop.SpecNode, PropertiesProxy>
      .remove(key: kotlin.String) {
         _builder.removeProperties(key)
       }
    /**
     * <code>map&lt;string, .io.paddle.plugin.interop.SpecNode&gt; properties = 4;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllProperties")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, io.paddle.plugin.interop.SpecNode, PropertiesProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, io.paddle.plugin.interop.SpecNode>) {
         _builder.putAllProperties(map)
       }
    /**
     * <code>map&lt;string, .io.paddle.plugin.interop.SpecNode&gt; properties = 4;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearProperties")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, io.paddle.plugin.interop.SpecNode, PropertiesProxy>
      .clear() {
         _builder.clearProperties()
       }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ValidProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .io.paddle.plugin.interop.CompositeSpecNode valid = 5;</code>
     */
     public val valid: com.google.protobuf.kotlin.DslList<io.paddle.plugin.interop.CompositeSpecNode, ValidProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getValidList()
      )
    /**
     * <code>repeated .io.paddle.plugin.interop.CompositeSpecNode valid = 5;</code>
     * @param value The valid to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addValid")
    public fun com.google.protobuf.kotlin.DslList<io.paddle.plugin.interop.CompositeSpecNode, ValidProxy>.add(value: io.paddle.plugin.interop.CompositeSpecNode) {
      _builder.addValid(value)
    }/**
     * <code>repeated .io.paddle.plugin.interop.CompositeSpecNode valid = 5;</code>
     * @param value The valid to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignValid")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<io.paddle.plugin.interop.CompositeSpecNode, ValidProxy>.plusAssign(value: io.paddle.plugin.interop.CompositeSpecNode) {
      add(value)
    }/**
     * <code>repeated .io.paddle.plugin.interop.CompositeSpecNode valid = 5;</code>
     * @param values The valid to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllValid")
    public fun com.google.protobuf.kotlin.DslList<io.paddle.plugin.interop.CompositeSpecNode, ValidProxy>.addAll(values: kotlin.collections.Iterable<io.paddle.plugin.interop.CompositeSpecNode>) {
      _builder.addAllValid(values)
    }/**
     * <code>repeated .io.paddle.plugin.interop.CompositeSpecNode valid = 5;</code>
     * @param values The valid to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllValid")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<io.paddle.plugin.interop.CompositeSpecNode, ValidProxy>.plusAssign(values: kotlin.collections.Iterable<io.paddle.plugin.interop.CompositeSpecNode>) {
      addAll(values)
    }/**
     * <code>repeated .io.paddle.plugin.interop.CompositeSpecNode valid = 5;</code>
     * @param index The index to set the value at.
     * @param value The valid to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setValid")
    public operator fun com.google.protobuf.kotlin.DslList<io.paddle.plugin.interop.CompositeSpecNode, ValidProxy>.set(index: kotlin.Int, value: io.paddle.plugin.interop.CompositeSpecNode) {
      _builder.setValid(index, value)
    }/**
     * <code>repeated .io.paddle.plugin.interop.CompositeSpecNode valid = 5;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearValid")
    public fun com.google.protobuf.kotlin.DslList<io.paddle.plugin.interop.CompositeSpecNode, ValidProxy>.clear() {
      _builder.clearValid()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun io.paddle.plugin.interop.CompositeSpecNode.copy(block: io.paddle.plugin.interop.CompositeSpecNodeKt.Dsl.() -> kotlin.Unit): io.paddle.plugin.interop.CompositeSpecNode =
  io.paddle.plugin.interop.CompositeSpecNodeKt.Dsl._create(this.toBuilder()).apply { block() }._build()
