//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: project.proto

package io.paddle.plugin.interop;

@kotlin.jvm.JvmSynthetic
public inline fun integerSpecNode(block: io.paddle.plugin.interop.IntegerSpecNodeKt.Dsl.() -> kotlin.Unit): io.paddle.plugin.interop.IntegerSpecNode =
  io.paddle.plugin.interop.IntegerSpecNodeKt.Dsl._create(io.paddle.plugin.interop.IntegerSpecNode.newBuilder()).apply { block() }._build()
public object IntegerSpecNodeKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.paddle.plugin.interop.IntegerSpecNode.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.paddle.plugin.interop.IntegerSpecNode.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.paddle.plugin.interop.IntegerSpecNode = _builder.build()

    /**
     * <code>string title = 1;</code>
     */
    public var title: kotlin.String
      @JvmName("getTitle")
      get() = _builder.getTitle()
      @JvmName("setTitle")
      set(value) {
        _builder.setTitle(value)
      }
    /**
     * <code>string title = 1;</code>
     */
    public fun clearTitle() {
      _builder.clearTitle()
    }

    /**
     * <code>string description = 2;</code>
     */
    public var description: kotlin.String
      @JvmName("getDescription")
      get() = _builder.getDescription()
      @JvmName("setDescription")
      set(value) {
        _builder.setDescription(value)
      }
    /**
     * <code>string description = 2;</code>
     */
    public fun clearDescription() {
      _builder.clearDescription()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ValidProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated int32 valid = 3;</code>
     */
     public val valid: com.google.protobuf.kotlin.DslList<kotlin.Int, ValidProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getValidList()
      )
    /**
     * <code>repeated int32 valid = 3;</code>
     * @param value The valid to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addValid")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, ValidProxy>.add(value: kotlin.Int) {
      _builder.addValid(value)
    }/**
     * <code>repeated int32 valid = 3;</code>
     * @param value The valid to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignValid")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, ValidProxy>.plusAssign(value: kotlin.Int) {
      add(value)
    }/**
     * <code>repeated int32 valid = 3;</code>
     * @param values The valid to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllValid")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, ValidProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Int>) {
      _builder.addAllValid(values)
    }/**
     * <code>repeated int32 valid = 3;</code>
     * @param values The valid to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllValid")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, ValidProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Int>) {
      addAll(values)
    }/**
     * <code>repeated int32 valid = 3;</code>
     * @param index The index to set the value at.
     * @param value The valid to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setValid")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, ValidProxy>.set(index: kotlin.Int, value: kotlin.Int) {
      _builder.setValid(index, value)
    }/**
     * <code>repeated int32 valid = 3;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearValid")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, ValidProxy>.clear() {
      _builder.clearValid()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun io.paddle.plugin.interop.IntegerSpecNode.copy(block: io.paddle.plugin.interop.IntegerSpecNodeKt.Dsl.() -> kotlin.Unit): io.paddle.plugin.interop.IntegerSpecNode =
  io.paddle.plugin.interop.IntegerSpecNodeKt.Dsl._create(this.toBuilder()).apply { block() }._build()
