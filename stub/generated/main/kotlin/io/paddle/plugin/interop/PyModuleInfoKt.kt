//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: plugins.proto

package io.paddle.plugin.interop;

@kotlin.jvm.JvmSynthetic
public inline fun pyModuleInfo(block: io.paddle.plugin.interop.PyModuleInfoKt.Dsl.() -> kotlin.Unit): io.paddle.plugin.interop.PyModuleInfo =
  io.paddle.plugin.interop.PyModuleInfoKt.Dsl._create(io.paddle.plugin.interop.PyModuleInfo.newBuilder()).apply { block() }._build()
public object PyModuleInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.paddle.plugin.interop.PyModuleInfo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.paddle.plugin.interop.PyModuleInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.paddle.plugin.interop.PyModuleInfo = _builder.build()

    /**
     * <code>string absoluteRepoDir = 1;</code>
     */
    public var absoluteRepoDir: kotlin.String
      @JvmName("getAbsoluteRepoDir")
      get() = _builder.getAbsoluteRepoDir()
      @JvmName("setAbsoluteRepoDir")
      set(value) {
        _builder.setAbsoluteRepoDir(value)
      }
    /**
     * <code>string absoluteRepoDir = 1;</code>
     */
    public fun clearAbsoluteRepoDir() {
      _builder.clearAbsoluteRepoDir()
    }

    /**
     * <code>string relativeDirToModule = 2;</code>
     */
    public var relativeDirToModule: kotlin.String
      @JvmName("getRelativeDirToModule")
      get() = _builder.getRelativeDirToModule()
      @JvmName("setRelativeDirToModule")
      set(value) {
        _builder.setRelativeDirToModule(value)
      }
    /**
     * <code>string relativeDirToModule = 2;</code>
     */
    public fun clearRelativeDirToModule() {
      _builder.clearRelativeDirToModule()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun io.paddle.plugin.interop.PyModuleInfo.copy(block: io.paddle.plugin.interop.PyModuleInfoKt.Dsl.() -> kotlin.Unit): io.paddle.plugin.interop.PyModuleInfo =
  io.paddle.plugin.interop.PyModuleInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()
